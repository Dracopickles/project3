{"version":3,"sources":["registerServiceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Signout/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/Signup/index.js","components/PasswordForget/index.js","components/Signin/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","concat","users","app","initializeApp","database","_ref","type","onClick","HOME","AuthUserContext","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","Session_context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","NavigationAuth","react_router_dom","to","ROUTES","Signout","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","SignInForm","SignInPage","PasswordForget_PasswordForgetLink","Signup_SignUpLink","PasswordChangeForm","PasswordChange","AdminPage","loading","on","snapshot","usersObject","val","usersList","keys","map","off","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","ReactDOM","render","context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.143f81bc.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n    user = uid => this.db.ref(`users/${uid}`);\r\n    \r\n  users = () => this.db.ref('users');\r\n}\r\n\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\nconst AuthUserContext = React.createContext(null);\r\nexport default AuthUserContext;","import React from 'react';\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n  return withFirebase(WithAuthentication);\r\n};\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\nexport default withAuthorization;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SignOutButton from '../Signout';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { AuthUserContext } from '../Session';\r\nconst Navigation = () => (\r\n  <div><AuthUserContext.Consumer>\r\n  {authUser =>\r\n    authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n  }\r\n</AuthUserContext.Consumer></div>\r\n);\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ADMIN}>Admin</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Landing = () => <h1>Signin page</h1>\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst SignUpPage = () => (\r\n  <div>\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const {username, email, passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          });\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  }\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign Up\r\n          </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignUpFormBase);\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../Signup';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nconst SignInPage = () => (\r\n  <div>\r\n    <h1>SignIn</h1>\r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n    const isInvalid = password === '' || email === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };","import React from 'react';\r\nimport { withAuthorization } from '../Session';\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(HomePage);","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    event.preventDefault();\r\n  };\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n  <div>\r\n    <h1>Account Page</h1>\r\n    <PasswordForgetForm />\r\n    <PasswordChangeForm />\r\n  </div>\r\n  )}\r\n  </AuthUserContext.Consumer>\r\n);\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(AccountPage);","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nclass AdminPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      users: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    this.props.firebase.users().on('value', snapshot => {\r\n      const usersObject = snapshot.val();\r\n      const usersList = Object.keys(usersObject).map(key => ({\r\n        ...usersObject[key],\r\n        uid: key,\r\n      }));\r\n      this.setState({\r\n        users: usersList,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.firebase.users().off();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Admin</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\nimport { BrowserRouter as Router,\r\n  Route, } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../Signup';\r\nimport SignInPage from '../Signin';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n    <Navigation />\r\n\r\n      <hr />\r\n\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage} />\r\n      <Route path={ROUTES.HOME} component={HomePage} />\r\n      <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router>\r\n  );\r\n  export default withAuthentication(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport * as serviceWorker from './registerServiceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n<App />\n</FirebaseContext.Provider>, \ndocument.getElementById(\"root\"));\nserviceWorker.unregister();\n\n"],"sourceRoot":""}